name: Build Docker images (latest)

on:
  push:
    branches:
      - 'master'
    paths:
      - .github/workflows/*.yml
      - pihole-updatelists.*
      - '*.sh'
      - Dockerfile
  schedule:
      - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      tag:
        required: false
        type: string 
        default: ''
      latest:
        required: true
        type: boolean 
        default: true

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      image-needs-updating: ${{ steps.check.outputs.needs-updating }}
    steps:
      - name: Docker Image Update Checker
        continue-on-error: true
        id: check
        uses: lucacome/docker-image-update-checker@v2
        with:
          base-image: pihole/pihole:latest
          image: jacklul/pihole:latest
        if: ${{ github.event_name == 'schedule' }}

  build:
    needs: check
    if: ${{ github.event_name != 'schedule' || needs.check.outputs.image-needs-updating == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Fetch latest release tag
        uses: pozetroninc/github-action-get-latest-release@v0.8.0
        id: remote-tag
        with:
          repository: pi-hole/docker-pi-hole
          excludes: prerelease, draft

      - name: Set latest release tag
        id: latest-tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            TAG="${{ github.event.inputs.tag }}"
            LATEST=${{ github.event.inputs.latest == true && 'yes' || ''}}
          else
            TAG="${{ steps.remote-tag.outputs.release }}"
            LATEST=yes
          fi
          echo "TAG=$TAG (latest = ${{ github.event.inputs.latest }})"
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "LATEST=$LATEST" >> $GITHUB_OUTPUT
          sed -i "s/:latest/:$TAG/g" Dockerfile

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v6,linux/arm/v7,linux/386
          push: true
          tags: |
            ${{ steps.latest-tag.outputs.LATEST != '' && 'jacklul/pihole:latest' || '' }}
            jacklul/pihole:${{ steps.latest-tag.outputs.TAG }}
